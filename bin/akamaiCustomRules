#!/usr/bin/env node

// Copyright 2017 Karl Redgate, All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

const { AppSecTool } = require('../index');

const Tool = require('tool');
const Noi = require('noi');
const { AppSecDefinition } = Noi;
const CustomRules = AppSecDefinition.CustomRules;

const sep = "\t";

function definition_info( obj ) {
    var id = obj.eventDefinitionId;
    var name = '"' + obj.eventName + '"';
    var desc = '"' + obj.eventDescription + '"';
    console.log( [id,name,desc].join(sep) );
}

function info( obj ) {
    var id = obj.eventTypeId;
    var name = obj.eventTypeName;
    console.log( "Type: " + name + " (" + id + ")" );
    obj.eventDefinitions.map( definition_info );
}

function dump_dto( dto ) {
    console.log( JSON.stringify(dto) );
    process.exit( 1 );

    if ( dto.length === 0 ) {
        console.log( "empty event type list" );
    }
    dto.map( info );
}

var commands = {
    "custom-rules": function () {
        if ( this.settings === null ) {
            throw "missing settings - should get default here";
        }
        CustomRules.rules( this.config, dump_dto );
    },
    "custom-rule": function ( id ) {
        CustomRules.rule( this.config, id, dump_dto );
    }
};

var tool = new AppSecTool( commands );

tool.evaluate( process.argv );

/* vim: set autoindent expandtab sw=4 syntax=javascript: */
