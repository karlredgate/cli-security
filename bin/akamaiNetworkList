#!/usr/bin/env node

// Copyright 2017 Karl Redgate, All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

const Tool = require('tool');
const Noi = require('noi');
const { NetworkList } = Noi;

const sep = "\t";

function repeat(pattern, count) {
    if ( count < 1 ) return '';
    var result = '';
    while (count > 1) {
        if (count & 1) result += pattern;
        count >>= 1;
        pattern += pattern;
    }
    return result + pattern;
}

function left_fill( s, size ) {
    var count = size - s.length;
    return s + repeat(' ', count);
}

function right_fill( s, size ) {
    var count = size - s.length;
    return repeat(' ', count) + s;
}

function detailed_info( obj ) {
    // console.log( JSON.stringify(obj) );
    obj.list.map( (e) => console.log(e) );
}

function info( obj ) {
    var name = obj.name;
    var type = left_fill( obj.type, 4 );
    var id   = left_fill( obj["unique-id"], 30 );
    var account = obj.account;
    var entries = obj.numEntries;
    var entry_s = right_fill( "("+entries+" entries)", 16 );
    console.log( id + type + entry_s + "  " + name );
}

function per_list( dto ) {
    var list = dto.network_lists;
    if ( list.length === 0 ) {
        console.log( "no network lists" );
    }
    list.map( info );
}

function delete_response() {
}

var commands = {
    list: function () {
        NetworkList.list( per_list );
    },
    fetch: function (id) {
        NetworkList.fetch( id, detailed_info );
    },
    "delete-element": function (id, element) {
        NetworkList.delete_element( id, element, delete_response );
    }
};

var tool = new Tool( commands );

tool.evaluate( process.argv );

/* vim: set autoindent expandtab sw=4 syntax=javascript: */
